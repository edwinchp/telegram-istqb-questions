[
  {
    "question": "Which one of the following answers describes a test condition?",
    "options": [
      "A distinguishing characteristic of a component or system",
      "A testable aspect of a component or system identified as a basis for testing",
      "The degree to which a software product provides functions which meet needs when the software is used",
      "Test cases designed to execute combinations of conditions and actions resulting from them"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which of the following statements is a valid objective for testing?",
    "options": [
      "Test should start as late as possible so that development had enough time to create a good product",
      "To validate whether the test object works as expected by the users and other stakeholders",
      "To prove that all possible defects are identified",
      "To prove that any remaining defects will not cause any failures"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which of the following statements correctly describes the difference between testing and debugging?",
    "options": [
      "Testing identifies the source of defects; debugging analyzes the defects and proposes prevention",
      "Dynamic testing shows failures caused by defects; debugging eliminates defects",
      "Testing removes faults; but debugging removes defects that cause the faults",
      "Dynamic testing prevents the causes of failures; debugging removes the failures"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which one of the statements below describes the most common situation for a failure discovered during testing or in production?",
    "options": [
      "The product crashed when the user selected an option in a dialog box",
      "The wrong version of a compiled source code file was included in the build",
      "The computation algorithm used the wrong input variables",
      "The developer misinterpreted the requirement for the algorithm"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Mr. Test, a mobile software tester with 5 years of experience, achieved exceptional results in a short time. However, he didn't modify or create new automated test cases for months, leading to fewer defects being detected during testing. What testing principle did Mr. Test overlook?",
    "options": [
      "Testing depends on the environment",
      "Exhaustive testing is not possible",
      "Repeating of same tests will not find new defects",
      "Defects cluster together"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "In what way can testing be part of Quality Assurance?",
    "options": [
      "It ensures that requirements are detailed enough",
      "Testing reduces the risk of poor software quality",
      "It ensures that standards in the organization are followed",
      "It measures the quality of software in terms of number of executed test cases"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which of the following activities is part of the main activity 'test analysis' in the test process?",
    "options": [
      "Identifying any required infrastructure and tools",
      "Creating test suites from test scripts",
      "Analyzing lessons learned for process improvement",
      "Evaluating the test basis for testability"
    ],
    "answer": 3,
    "explanation": ""
  },
  {
    "question": "How can white-box testing be applied during user acceptance testing?",
    "options": [
      "To check if large volumes of data can be transferred between integrated systems",
      "To check if all code statements and code decision paths have been executed",
      "To check if all work process flows have been covered",
      "To cover all web page navigations"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "Which one of the following is the BEST definition of an incremental development model?",
    "options": [
      "Defining requirements, designing and testing are done in phases where in each phase a piece is added",
      "A phase in the development process should begin when the previous phase is complete",
      "Testing is viewed as a separate phase which takes place after development has been completed",
      "Testing is added to development as an increment"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Which of the following should NOT be a trigger for maintenance testing?",
    "options": [
      "Decision to test the maintainability of the software",
      "Decision to test the system after migration to a new operating platform",
      "Decision to test if archived data is possible to be retrieved",
      "Decision to test after 'hot fixes'"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Which of the following options are roles in a formal review?",
    "options": [
      "Developer, Moderator, Review leader, Reviewer, Tester",
      "Author, Moderator, Manager, Reviewer, Developer",
      "Author, Manager, Review leader, Reviewer, Designer",
      "Author, Moderator, Review leader, Reviewer, Scribe"
    ],
    "answer": 3,
    "explanation": ""
  },
  {
    "question": "Which activities are carried out within the planning of a formal review?",
    "options": [
      "Collection of metrics for the evaluation of the effectiveness of the review",
      "Answer any questions the participants may have",
      "Definition and Verification of fulfillment of entry criteria for the review",
      "Evaluation of the review findings against the exit criteria"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "Which of the review types below is the BEST option to choose when the review must follow a formal process based on rules and checklists?",
    "options": [
      "Informal Review",
      "Technical Review",
      "Inspection",
      "Walkthrough"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "Which of the following statements about static testing are MOST true?",
    "options": [
      "Static testing is a cheap way to detect and remove defects",
      "Static testing makes dynamic testing less challenging",
      "Static testing makes it possible to find run-time problems early in the lifecycle",
      "Static testing better for safety-critical systems; dynamic testing finds defects better."
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "What is checklist-based testing?",
    "options": [
      "A test technique based on tester's knowledge of past faults or general knowledge of failures",
      "A test technique based on an analysis of the specification of a component or system",
      "Experience-based technique where tester uses a list of items or criteria to verify product",
      "Testers dynamically design and execute tests based on knowledge and exploration of test item"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "The statement on decision coverage suggests that when there is only one 'if' statement with no loops or CASE statements, and its execution is not nested, running any single test case results in 50% decision coverage. What is the correct statement regarding this?",
    "options": [
      "The statement is true. Any single test case provides 100% statement coverage and therefore 50% decision coverage",
      "The statement is true. Any single test case would cause the outcome of the “if” statement to be either true or false",
      "The statement is false. A single test case can only guarantee 25% decision coverage in this case",
      "The statement is false. The statement is too broad. It may be correct or not, depending on the tested software"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which one of the following is the description of statement coverage?",
    "options": [
      "It is a metric, which is the percentage of test cases that have been executed",
      "It is a metric, which is the percentage of statements in the source code that have been executed",
      "It is a metric that counts the number of executed statements in the source code by passed test cases",
      "It is a metric, that gives a true/false confirmation if all statements are covered or not"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "Which statement about the relationship between statement coverage and decision coverage is true?",
    "options": [
      "100% decision coverage also guarantees 100% statement coverage",
      "100% statement coverage also guarantees 100% decision coverage",
      "50% decision coverage also guarantees 50% statement coverage",
      "Decision coverage can never reach 100%"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "For which of the following situations is exploratory testing suitable?",
    "options": [
      "When time pressure requires speeding up the execution of tests already specified",
      "When the system is developed incrementally, and no test charter is available",
      "When testers are available who have enough knowledge of similar applications and technologies",
      "When there is prior knowledge of the system and it should undergo extensive testing"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "Which one of the following is NOT included in a test summary report?",
    "options": [
      "Defining pass/fail criteria and objectives of testing",
      "Deviations from the test approach",
      "Measurements of actual progress against exit criteria",
      "Evaluation of the quality of the test object"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Which one of the following is the characteristic of a metrics-based approach for test estimation?",
    "options": [
      "Budget which was used by a previous similar test project",
      "Overall experience collected in interviews with test managers",
      "Estimation of effort for test automation agreed in the test team",
      "Average of calculations collected from business experts"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Which one of the following is MOST likely to be a benefit of test execution tools?",
    "options": [
      "It is easy to create regression tests",
      "It is easy to maintain version control of test assets",
      "It is easy to design tests for security testing",
      "It is easy to run regression tests"
    ],
    "answer": 3,
    "explanation": ""
  },
  {
    "question": "Which one of the following test tools is mostly suitable for developers rather than testers?",
    "options": [
      "Requirement management tools",
      "Configuration management tools",
      "Static analysis tools",
      "Performance testing tools"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "White-box testing is a good candidate to apply unit testing.",
    "options": [
      "False",
      "True"
    ],
    "answer": 1,
    "explanation": "In a White-box testing you have access to the internal code and structure. Knowing this, you can apply unit testing."
  },
  {
    "question": "It can show failures that are caused by defects in the software.",
    "options": [
      "Testing",
      "Root cause",
      "Debugging",
      "Static testing"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Development activity that find, analyzes and fixes defects.",
    "options": [
      "Testing",
      "Root cause",
      "Debugging",
      "Static testing"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "Includes all activities that direct and control an organization regarding quality.",
    "options": [
      "Quality Control",
      "Quality Management",
      "Debugging",
      "Static testing"
    ],
    "answer": 1,
    "explanation": "Quality management ties together the concept of Quality Assurance and Testing."
  },
  {
    "question": "It focuses on the adherence of the proper processes in order to provide confidence that level of quality will be achieved.",
    "options": [
      "Quality Control",
      "Quality Management",
      "Quality Assurance",
      "Static testing"
    ],
    "answer": 2,
    "explanation": "Quality Assurance focuses on the proper execution. It also belongs to larger concept called Quality Management."
  },
  {
    "question": "Involves many activities including test activities, that support the achievement of right levels of quality.",
    "options": [
      "Quality Control",
      "Quality Management",
      "Quality Assurance",
      "Static testing"
    ],
    "answer": 0,
    "explanation": "Quality Control belongs to larger concept called Quality Management."
  },
  {
    "question": "A person makes _____, which causes _____ in the software code, and when it is executed it causes _____ in the software.",
    "options": [
      "an error / a defect / a failure",
      "an error / a failure / a defect",
      "a defect / a defect / an error",
      "a failure / a defect / a failure"
    ],
    "answer": 0,
    "explanation": "Example: A programming error can lead to a defect in the code. If a defect is executed this may cause a failure in the application."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nDuring testing, a software application is found to crash when a certain input is entered. This defect would have gone unnoticed if not for testing.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 0,
    "explanation": "Testing reduces the probability of undiscovered defects remaining in the software but, even if no defects are found, testing is not a proof of correctness."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nAn e-commerce website with millions of products cannot be tested for every possible combination of inputs, so testers focus on the most important and high-risk areas, such as the checkout process.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 1,
    "explanation": "Rather than attempting to test exhaustively, risk analysis, test techniques, and priorities should be used to focus test efforts."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nA defect is found in the requirements phase of a project, allowing the development team to correct it early, which is much cheaper and easier than fixing it later in the development process.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 2,
    "explanation": "To find defects early, both static and dynamic test activities should be started as early as possible in the software development lifecycle."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nIn a medical software application, most defects are found in the module that handles patient data, prompting testers to focus their efforts on improving the quality of that module.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 3,
    "explanation": "A small number of modules usually contains most of the defects discovered during pre-release testing, or is responsible for most of the operational failures."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nTesters find that the same test cases are not finding any new defects, so they review and update the test cases to include new scenarios and inputs to keep them effective.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 4,
    "explanation": "To detect new defects, existing tests and test data may need changing, and new tests may need to be written."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nThe testing approach for a mobile game would be different from that of a safety-critical medical device. The former would require more exploratory testing, while the latter would require more rigorous testing and documentation.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 5,
    "explanation": "Example: Industrial software is tested differently from an e-commerce mobile app. Also testing in Agile is done differently than testing in sequential software development."
  },
  {
    "question": "Which one of the 7 principles represents this scenario:\n\nAn application has gone through testing and no defects have been found. However, when users use the application, they find new defects that were not found during testing, highlighting the importance of continuous testing and monitoring.",
    "options": [
      "Testing shows the presence of defects, not their absence",
      "Exhaustive testing is impossible",
      "Early testing saves time and money",
      "Defects cluster together",
      "Beware of the pesticide paradox",
      "Testing is context dependent",
      "Absence-of-errors is a fallacy"
    ],
    "answer": 6,
    "explanation": "Example: testing all requirements and fixing all defects found could still produce a system that is difficult to use, that does not fulfill the users’ needs and expectations."
  },
  {
    "question": "Order these Test Process activities:\n\nA)Test analysis    B)Test planning    C)Test design    D)Test monitoring and control    E)Test execution    F)Test implementation    G)Test completion",
    "options": [
      "B, D, A, C, F, E, G",
      "B, D, A, C, E, F, G",
      "A, B, C, E, D, F, G",
      "A, B, C, D, E, F, G",
      "B, D, A, E, C, F, G"
    ],
    "answer": 0,
    "explanation": "Each constituent activity consists of multiple individual tasks, which would vary from one project or release to another."
  },
  {
    "question": "Involves activities that define the objectives of testing and the approach for meeting test objectives within constraints imposed by the context (e.g., specifying suitable test techniques and tasks, and formulating a test schedule for meeting a deadline).",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "Involves the on-going comparison of actual progress against planned progress using any test monitoring metrics defined in the test plan.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test monitoring",
      "Test control",
      "Test execution",
      "Test completion"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "Involves taking actions necessary to meet the objectives of the test plan (which may be updated over time).",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test monitoring",
      "Test control",
      "Test execution",
      "Test completion"
    ],
    "answer": 5,
    "explanation": ""
  },
  {
    "question": "It is supported by the evaluation of exit criteria, which are referred to as the definition of done in some software development lifecycle models.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 1,
    "explanation": ""
  },
  {
    "question": "During this test process, the test basis is analyzed to identify testable features and define associated test conditions. In other words, it determines “what to test” in terms of measurable coverage criteria.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "During this test process you perform the following tasks:\n\nAnalyze requirement specifications, Design and implementation, Risk analysis, Evaluate test items to identify defects.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "In which test process the application of black-box, white-box and experienced-based test techniques can be useful to reduce the likelihood of omitting important test conditions and to define accurate test conditions?",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "During this test process, the test conditions are elaborated into high-level test cases, sets of high-level test cases, and other testware. This test process answers the question “how to test?”",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 3,
    "explanation": "Test design may also result in the identification of similar types of defects in the test basis."
  },
  {
    "question": "This process includes the following major activities: Capturing bi-directional traceability between the test basis, test conditions, and test cases.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 3,
    "explanation": "Test design may also result in the identification of similar types of defects in the test basis."
  },
  {
    "question": "This test process includes the following major activities: Designing and prioritizing test cases and sets of test cases",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 3,
    "explanation": "Test design may also result in the identification of similar types of defects in the test basis."
  },
  {
    "question": "This test process includes the following major activities: Identifying necessary test data to support test conditions and test cases.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 3,
    "explanation": "Test design may also result in the identification of similar types of defects in the test basis."
  },
  {
    "question": "This test process includes the following major activities:\n\nDesign or plan the test environment and identifying any required infrastructure and tools.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 3,
    "explanation": "Test design may also result in the identification of similar types of defects in the test basis."
  },
  {
    "question": "During this test process, the testware necessary for test execution is created and/or completed, including sequencing the test cases into test procedures.\nIt answers the question “do we now have everything in place to run the tests?”",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nDeveloping and prioritizing test procedures, and, potentially, creating automated test scripts. Creating test suites from the test procedures and (if any) automated test scripts.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nArranging the test suites within a test execution schedule in a way that results in efficient test execution. Preparing test data and ensuring it is properly loaded in the test environment.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nBuild the test environment (including, potentially test harnesses, service virtualization simulators and other infrastructure items) and verifying that everything needed has been set up correctly.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nRecording the IDs and versions of the test item(s) or test object, test tool(s), and testware. Test either manually or by using test execution tools. Comparing actual results with expected results.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 5,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nReporting defects based on the failures observed. Logging the outcome of test execution (e.g., pass, fail, blocked).",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 5,
    "explanation": ""
  },
  {
    "question": "This test process includes the following major activities:\n\nCreating a test summary report to be communicated to stakeholders. Finalizing and archiving the test environment, the test data, the test infrastructure, and other testware for later reuse.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 6,
    "explanation": "Test completion activities collect data from completed test activities to consolidate experience, testware, and any other relevant information."
  },
  {
    "question": "This test process includes the following major activities:\n\nAnalyzing lessons learned from the concluded test activities to determine changes needed for future iterations, releases, and projects. Using the information gathered to improve test process maturity.",
    "options": [
      "Test planning",
      "Test monitoring and control",
      "Test analysis",
      "Test design",
      "Test implementation",
      "Test execution",
      "Test completion"
    ],
    "answer": 6,
    "explanation": "Test completion activities collect data from completed test activities to consolidate experience, testware, and any other relevant information."
  },
  {
    "question": "It includes information about the test basis, to which the other test work products will be related via traceability information, as well as exit criteria (or definition of done) which will be used during test monitoring and control.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "It includes various types of test reports, including test progress reports produced on an ongoing and/or a regular basis, and test summary reports produced at various completion milestones.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 1,
    "explanation": "All test reports should provide audience-relevant details about the test progress as of the date of the report, including summarizing the test execution results once those become available."
  },
  {
    "question": "It includes defined and prioritized test conditions, each of which is ideally bidirectionally traceable to the specific element(s) of the test basis it covers.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 2,
    "explanation": "Test analysis may also result in the discovery and reporting of defects in the test basis."
  },
  {
    "question": "It results in test cases and sets of test cases to exercise the test conditions defined in test analysis.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 3,
    "explanation": "It is often a good practice to design high-level test cases, without concrete values for input data and expected results."
  },
  {
    "question": "Includes: Test procedures and the sequencing of those test procedures. Test suites. A test execution schedule.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "Includes: Documentation of the status of individual test cases or test procedures (e.g., ready to run, pass, fail, blocked, deliberately skipped, etc.). Defect reports. Documentation about which test item(s), test object(s), test tools, and testware were involved in the testing.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 5,
    "explanation": ""
  },
  {
    "question": "It includes test summary reports, action items for improvement of subsequent projects or iterations, change requests or product backlog items, and finalized testware.",
    "options": [
      "Test planning work products",
      "Test monitoring and control work products",
      "Test analysis work products",
      "Test design work products",
      "Test implementation work products",
      "Test execution work products",
      "Test completion work products"
    ],
    "answer": 6,
    "explanation": ""
  },
  {
    "question": "On which test level these defects are typically found?\n\nIncorrect functionality (e.g., not as described in design specifications). Data flow problems. Incorrect code and logic.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 0,
    "explanation": "Component testing (also known as unit or module testing) focuses on components that are separately testable."
  },
  {
    "question": "On which test level these defects are typically found?\n\nFailures in communication between components. Unhandled or improperly handled communication failures between components. Incorrect assumptions about the meaning, units, or boundaries of the data being passed between components.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 1,
    "explanation": "Integration testing focuses on interactions between components or systems."
  },
  {
    "question": "On which test level these defects are typically found?\n\nFailure to properly and completely carry out end-to-end functional tasks. Failure of the product to work properly in the environment(s). Failure to work as described in user manuals.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 2,
    "explanation": "System testing should focus on the overall, end-to-end behavior of the system as a whole, both functional and non-functional."
  },
  {
    "question": "On which test level these defects are typically found?\n\nSystem workflows do not meet business or user requirements. Business rules are not implemented correctly. System does not satisfy contractual or regulatory requirements.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 3,
    "explanation": "Acceptance testing, like system testing, typically focuses on the behavior and capabilities of a whole system or product."
  },
  {
    "question": "_____ is often the responsibility of developers. ______ is generally the responsibility of testers. Ideally, when testers performing it should understand the system architecture.",
    "options": [
      "Component integration testing / System integration testing",
      "System integration testing / Component integration testing",
      "System integration testing / Integration testing",
      "Acceptance testing / Component integration testing"
    ],
    "answer": 0,
    "explanation": ""
  },
  {
    "question": "It focuses on the behavior and capabilities of a whole product, often considering the end-to-end tasks the product can perform and the non-functional behaviors it exhibits while performing those tasks.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "It typically focuses on the behavior and capabilities of a whole product. Validating that it is complete and will work as expected. And also establishing confidence in the quality. Defects may be found, but doing it is often not an objective.",
    "options": [
      "Component testing",
      "Integration testing",
      "System testing",
      "Acceptance testing"
    ],
    "answer": 3,
    "explanation": "Finding a significant number of defects during acceptance testing may in some cases be considered a major project risk."
  },
  {
    "question": "The main objective is building confidence that the users can use the system to meet their needs, fulfill requirements, and perform business processes with minimum difficulty, cost, and risk.",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Contractual and regulatory acceptance testing",
      "Alpha and beta testing"
    ],
    "answer": 0,
    "explanation": "It is typically focused on validating the fitness for use of the system by intended users in a real or simulated environment."
  },
  {
    "question": "Aspects focused on this acceptance testing:\n\nDisaster recovery. User management. Maintenance tasks. Testing of backup/restore. Load and migration tasks.",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Contractual and regulatory acceptance testing",
      "Alpha and beta testing"
    ],
    "answer": 1,
    "explanation": "The objective is building confidence that the system administrators can keep the system working properly even under difficult conditions."
  },
  {
    "question": "It is performed against an agreement of acceptance criteria for producing custom-developed software. Acceptance criteria should be defined when the parties agree to the commitment.",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Contractual and regulatory acceptance testing",
      "Alpha and beta testing"
    ],
    "answer": 2,
    "explanation": "Regulatory acceptance testing is often performed by users or by independent testers, sometimes with the results being witnessed or audited by regulatory agencies."
  },
  {
    "question": "It is used by developers of commercial off-the-shelf (COTS) software who want to get feedback from potential or existing users, customers, and/or operators before the software product is put on the market. ",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Contractual and regulatory acceptance testing",
      "Alpha and beta testing"
    ],
    "answer": 3,
    "explanation": ""
  },
  {
    "question": "It is performed at the developing organization’s site, not by the development team, but by potential or existing customers, and/or operators or an independent test team.",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Alpha and beta testing",
      "Alpha testing",
      "Beta testing"
    ],
    "answer": 3,
    "explanation": ""
  },
  {
    "question": "It is performed by potential or existing customers, and/or operators at their own locations.",
    "options": [
      "User acceptance testing (UAT)",
      "Operational acceptance testing (OAT)",
      "Alpha and beta testing",
      "Alpha testing",
      "Beta testing"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "It involves tests that evaluate functions that the system should perform. Work products could be business requirements specifications, epics, user stories, use cases, or functional specifications, or they may be undocumented.",
    "options": [
      "Functional testing",
      "Non-functional testing",
      "White-box testing",
      "Black-box testing",
      "Change-related testing"
    ],
    "answer": 0,
    "explanation": "The functions are “what” the system should do."
  },
  {
    "question": "It evaluates characteristics of systems and software such as usability, performance efficiency or security. Refer to ISO standard (ISO/IEC 25010) for a classification of software product quality characteristics.",
    "options": [
      "Functional testing",
      "Non-functional testing",
      "White-box testing",
      "Black-box testing",
      "Change-related testing"
    ],
    "answer": 1,
    "explanation": "Non-functional testing is the testing of “how well” the system behaves."
  },
  {
    "question": "It evaluates characteristics of systems and software such as usability, performance efficiency or security. It is the testing of “how well” the system behaves.",
    "options": [
      "Functional testing",
      "Non-functional testing",
      "White-box testing",
      "Black-box testing",
      "Change-related testing"
    ],
    "answer": 1,
    "explanation": "The late discovery of non-functional defects can be extremely dangerous to the success of a project."
  },
  {
    "question": "It is based on the system’s internal structure or implementation. Internal structure may include code, architecture, work flows, and/or data flows within the system.",
    "options": [
      "Functional testing",
      "Non-functional testing",
      "White-box testing",
      "Black-box testing",
      "Change-related testing"
    ],
    "answer": 2,
    "explanation": "It requires special skills or knowledge, such as the way the code is built and how data is stored."
  },
  {
    "question": "It is required when new features, modification to existing features, and code refactoring result in frequent alteration to the code.",
    "options": [
      "Functional testing",
      "Non-functional testing",
      "White-box testing",
      "Black-box testing",
      "Change-related testing"
    ],
    "answer": 4,
    "explanation": ""
  },
  {
    "question": "We need to calculate an employee bonus. It can't be negative, it could be zero and it is based on job duration:\n➊<= 2 years, ➋ > 2 and < 5 years, ➌ 5 > 10 years or > 10 years\nWhat is the minimum scenarios required to cover all valid equivalence partitioning to calculate the bonus?",
    "options": [
      "3",
      "5",
      "2",
      "4"
    ],
    "answer": 3,
    "explanation": "You need 4 if you divide the range like this:\n0 1 2 - 3 4 - 5 6 7 8 9 10 - 11 12"
  },
  {
    "question": "An application gives feedback based on the steps walked:\n➊0+ to 1000 steps, ➋1000+ to 2000 steps, ➌2000+ to 4000 steps, ➍4000+ to 6000 steps, ➎6000+ steps\nWhich input values would provide the highest equivalence partitioning coverage?",
    "options": [
      "0, 1000, 2000, 3000, 4000",
      "1000, 2001, 4000, 4001, 6000",
      "123, 2345, 3456, 4567, 5678",
      "666, 999, 2222, 5555, 6666"
    ],
    "answer": 3,
    "explanation": "It covers 4 of 5 partitions:\n666 (1), 999 (1), 2222 (3), 5555 (4), 6666 (5)"
  },
  {
    "question": "A temperature converter app provides the following output categories based on the input temperature:\n➊Below freezing (<= 32°F), ➋Cold (33°F - 50°F), ➌Mild (51°F - 70°F), ➍Hot (> 70°F)\nWhich input values would provide the highest equivalence partitioning coverage?",
    "options": [
      "10, 30, 40, 80",
      "32, 33, 51, 70",
      "20, 35, 65, 80",
      "25, 45, 55, 75"
    ],
    "answer": 1,
    "explanation": "The input values 32, 33, 51, and 70 cover all four temperature categories:\nbelow freezing, cold, mild, and hot."
  },
  {
    "question": "A system categorizes customers into different tiers based on their purchase amount:\n➊$0 - $100. ➋$101 - $500. ➌$501 - $1000. ➍$1001 - 5000 and 5001 and above\nHow many scenarios are required to cover all valid equivalence partitions for determining the customer tier?",
    "options": [
      "3",
      "4",
      "5",
      "6"
    ],
    "answer": 2,
    "explanation": "You need 5 scenarios to cover all valid equivalence partitions:\n$5, $120, $705, $3876 and $5600."
  },
  {
    "question": "A system has the following password complexity:\n➊<= 8 characters. ➋<= 8 characters, 1 uppercase letter. ➌<= 8 characters, 1 uppercase letter, 1 digit. ➍<= 8 characters, 1 uppercase letter, 1 digit, 1 special character.\nHow many scenarios are required to cover all valid equivalence partitions?",
    "options": [
      "2",
      "3",
      "4",
      "5"
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "question": "A bank application tester wants to test how a component should calculate compound interest.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "System testing",
      "System integration testing",
      "Acceptance testing"
    ],
    "answer": 0,
    "explanation": "It is a level of testing that focuses on testing individual software components in isolation."
  },
  {
    "question": "A bank application tester wants to test how a component should calculate compound interest.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "Component testing (non-functional)",
      "System integration testing"
    ],
    "answer": 0,
    "explanation": "It is a level of testing that focuses on testing individual software components in isolation."
  },
  {
    "question": "A bank application tester wants to test how account information captured at the user interface is passed to the business logic.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "System testing",
      "System integration testing",
      "Acceptance testing"
    ],
    "answer": 1,
    "explanation": "It ensures that the components function correctly when combined and that they can communicate and exchange data properly."
  },
  {
    "question": "A bank application tester wants to test how account information captured at the user interface is passed to the business logic.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "Component integration testing (non-functional)",
      "System integration testing"
    ],
    "answer": 1,
    "explanation": "It ensures that the components function correctly when combined and that they can communicate and exchange data properly."
  },
  {
    "question": "A bank application tester wants to test how account holders can apply for a line of credit on their checking accounts.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "System testing",
      "System integration testing",
      "Acceptance testing"
    ],
    "answer": 2,
    "explanation": " It is a level of testing where the entire system is tested as a whole."
  },
  {
    "question": "A bank application tester wants to test how the system uses an external microservice to check an account holder’s credit score.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "System testing",
      "System integration testing",
      "Acceptance testing"
    ],
    "answer": 3,
    "explanation": "It verifies that the different components of the system work together seamlessly and interact correctly with each other."
  },
  {
    "question": "A bank application tester wants to test how the banker handles approving or declining a credit application.\n\nWhat test type is the BEST option?",
    "options": [
      "Component testing",
      "Component integration testing",
      "System testing",
      "System integration testing",
      "Acceptance testing"
    ],
    "answer": 4,
    "explanation": "It involves testing the system in a real-world environment to validate its functionality, usability, and compliance with business needs."
  }
]